joint_controller:
  frequency: {
    type: double,
    default_value: 1.0,
    description: "Frequency of pid controller.",
    validation: {
      gt<>: 0.0,
    }
  }
  joint_names: {
    type: string_array,
    default_value: [],
    description: "Specifies joint_names or axes used by the controller.",
    read_only: true,
    validation: {
      unique<>: null,
      not_empty<>: null,
    }
  }
  joint_params:
    __map_joint_names:
      position_max: {
        type: double,
        default_value: 0.0,
        description: "Maximum position for joint"
      }
      position_min: {
        type: double,
        default_value: 0.0,
        description: "Minimum position for joint"
      }
      position_offset: {
        type: double,
        default_value: 0.0,
        description: "Offset position for joint"
      }
      velocity_max: {
        type: double,
        default_value: 0.0,
        description: "Maximum velocity for joint",
        validation: {
          gt_eq<>: 0.0,
        }
      }
      effort_max: {
        type: double,
        default_value: 0.0,
        description: "Maximum effort for joint",
        validation: {
          gt_eq<>: 0.0,
        }
      }
  command_interface: {
    type: string,
    default_value: "effort",
    description: "Name of the interfaces used by the controller for writing commands to the hardware.",
    read_only: true,
    validation: {
      not_empty<>: null,
      one_of<>: [['effort']],
    }
  }
  reference_interfaces: {
    type: string_array,
    default_value: ["position", "velocity", "effort"],
    description: "Name of the interfaces used by the controller getting reference commands (topics or other controllers).",
    read_only: true,
    validation: {
      not_empty<>: null,
      size_gt<>: 0,
      size_lt<>: 6,
      subset_of<>: [["position", "velocity", "effort", "kp_scale", "kd_scale"]],
    }
  }
  state_interfaces: {
    type: string_array,
    default_value: ["position", "velocity"],
    description: "Name of the interfaces used by the controller getting hardware states.",
    read_only: true,
    validation: {
      not_empty<>: null,
      size_gt<>: 1,
      size_lt<>: 3,
      subset_of<>: [["position", "velocity"]],
    }
  }
  pid_gains:
    __map_joint_names:
      p: {
        type: double,
        default_value: 0.0,
        description: "Proportional gain for PID",
        validation: {
          gt_eq<>: 0.0,
        }
      }
      i: {
        type: double,
        default_value: 0.0,
        description: "Integral gain for PID",
        validation: {
          gt_eq<>: 0.0,
        }
      }
      d: {
        type: double,
        default_value: 0.0,
        description: "Derivative gain for PID",
        validation: {
          gt_eq<>: 0.0,
        }
      }
      ilimit: {
        type: double,
        default_value: 0.0,
        description: "Integrator limit for PID",
        validation: {
          gt_eq<>: 0.0,
        }
      }